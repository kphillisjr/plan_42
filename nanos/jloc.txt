NANOS:
	loader\loader.o
	kernel\kernel.o

Loader_Size  = (Loader.i_length+Kernel.i_length-1)/1000+1
Loader_Size_bytes = NANOS.Loader_Size*1000
Kernel_Start = Loader.start+Kernel.image
Kernel_Size  = (Kernel.i_length-1)/1000+1

Loader: 0, NANOS.mem, 0
	, , ,Loader, loader\loader.o
		
Kernel: 0, 0, Loader.i_length
	, , ,.text, kernel\kernel.o

TheRest: 0, 0, -1	;exclude from output
	*
	
	
	

; namespace:
; symbol = expression
;
; section:  base  start  i_start  selector
;		namespace, group, class, segment, filename
;
;	---
;
; Expressions:
; base		Linear address, relative to which all its offsets are computed.
; start		Starting linear address.
; image		Starting address within image file.
; length		Length.
; i_length	Length excluding uninitialized data at the end.
; after		start+length.
; i_after		image+length (Note the use of length, not i_length).
